@model CampManagement.Domain.Entities.CampSetup

@{    
    Layout = null;
}

<div class="row">
    <div class="col-sm-6">
        <section class="panel">
            <div class="panel-body">
                @using (Html.BeginForm("CreateOrEdit", "CampSetups", FormMethod.Post, new { @class = "", role = "form", id="frm" }))
                {
                    @Html.AntiForgeryToken()
                    @Html.HiddenFor(model => model.CreatedDate)
                    <input type="hidden" name="Year" id="Year" value="@(Model == null ? DateTime.Now.Year : Model.Year)" />
                    <input type="hidden" name="CampId" id="CampId" value="@Url.RequestContext.RouteData.Values["id"].ToString()" />

                    @Html.HiddenFor(model => model.CreatedBy)
                    @Html.HiddenFor(model => model.CampSetupId)
                    if (Model != null)
                    {
                        @Html.ValidationSummary(false, "", new { @class = "text-danger" })    
                    }

                    <div class="row">
                        <div class="col-xs-6">
                            @Html.LabelFor(model => model.CurrentPrice, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.CurrentPrice, new { htmlAttributes = new { @class = "form-control", placeholder= "Price in U$", Value = Model == null || Model.CurrentPrice == 0 ? "" : Model.CurrentPrice.ToString("F") } })
                        </div>
                        <div class="col-xs-6">
                            @Html.LabelFor(model => model.Spaces, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.Spaces, new { htmlAttributes = new { @class = "form-control", placeholder = "Spots available", Value = (Model == null || Model.Spaces == 0 ? "" : Model.Spaces.ToString()) } })
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xs-6">
                            @Html.LabelFor(model => model.StartDay, htmlAttributes: new { @class = "" })
                            @if (Model == null || Model.StartDay == default(DateTime))
                            {
                                @Html.EditorFor(model => model.StartDay, new { htmlAttributes = new { @class = "input-sm datepicker-input form-control form-date", Value = "", placeholder = "MM/DD/YYYY" } })
                            }
                            else
                            {
                                @Html.EditorFor(model => model.StartDay, new { htmlAttributes = new { @class = "input-sm datepicker-input form-control form-date", Value = Model.StartDay.ToString("MM/dd/yyyy"), placeholder = "MM/DD/YYYY" } })
                            }
                        </div>
                        <div class="col-xs-6">
                            @Html.LabelFor(model => model.EndDay, htmlAttributes: new { @class = "" })
                            @if (Model == null || Model.EndDay == default(DateTime))
                            {
                                @Html.EditorFor(model => model.EndDay, new { htmlAttributes = new { @class = "input-sm datepicker-input form-control form-date", Value = "", placeholder = "MM/DD/YYYY" } })
                            }
                            else
                            {
                                @Html.EditorFor(model => model.EndDay, new { htmlAttributes = new { @class = "input-sm datepicker-input form-control form-date", Value = Model.EndDay.ToString("MM/dd/yyyy"), placeholder = "MM/DD/YYYY" } })
                            }
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-xs-6">
                            @Html.LabelFor(model => model.FromGrade, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.FromGrade, new { htmlAttributes = new { @class = "form-control", placeholder = "From this Grade", Value = Model == null || Model.FromGrade == 0 ? "" : Model.FromGrade.ToString() } })
                        </div>
                        <div class="col-xs-6">
                            @Html.LabelFor(model => model.ToGrade, htmlAttributes: new { @class = "" })
                            @Html.EditorFor(model => model.ToGrade, new { htmlAttributes = new { @class = "form-control", placeholder = "To this Grade", Value = Model == null || Model.ToGrade == 0 ? "" : Model.ToGrade.ToString() } })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-xs-12" style="padding-top: 10px">
                            <div class="pull-right">
                                <a href="@Url.Action("Edit", "Camps", new {id = Url.RequestContext.RouteData.Values["id"] })" class="btn btn-info btn-back" style="margin-right: 5px"><i class="fa fa-reply text"></i> Back</a>
                                <button type="submit" class="btn btn-success">
                                    <i class="fa fa-save text"></i>
                                    @((Model == null || Model.CampSetupId == 0) ? "Create" : "Save")
                                </button>
                            </div>
                        </div>                        
                    </div>                    
                }
            </div>
        </section>
    </div>
    <div class="col-sm-6">
        <section class="panel">
            <header class="panel-heading font-bold">Extra Activities</header>
            <table class="table table-striped m-b-none text-sm">
                <thead>
                <tr>
                    <th>Description</th>
                    <th width="150"></th>
                </tr>
                </thead>
                <tbody>
                    
                </tbody>
            </table>
        </section>
    </div>
</div>


<script type="text/javascript">
    $(document)
        .ready(function() {
            $("#frm .datepicker-input").datepicker();
            $("#frm .datepicker-input").on('changeDate', function (ev) {
                $(this).datepicker('hide');
            });

            @if (Model != null && Model.Year != DateTime.Now.Year)
            {
                <text>
                $("form[role='form']").slice(1).find("input").prop("disabled", true);
                $("form[role='form']").slice(1).find("button,a").hide();
                </text>
            }
        });
</script>