@model CampManagement.Domain.Entities.Guardian

@{
    Layout = null;
}

@Html.HiddenFor(model => model.GuardianId)
<div class="row">
    <div class="col-xs-8">
        <div class="form-group">
            <label class="control-label">Email&nbsp;
                @if (Model?.EmailConfirmed == true)
                {
                    <i style="color: green" class='fa fa-check-circle'></i>
                }
                else
                {
                    <i data-guardianid="@(Model?.GuardianId)" style='color: red' class='fa fa-exclamation-circle' title='Email not confirmed'></i>
                }
            </label>
            @Html.EditorFor(model => model.Email, new {htmlAttributes = new {@class = "form-control", @readonly = ""}})

        </div>
    </div>
    <div class="col-xs-4">
        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control", @readonly = "", Value = Model.Phone.Length == 10 ? string.Format("({0}) {1}-{2}", Model.Phone.Substring(0, 3), Model.Phone.Substring(3, 3), Model.Phone.Substring(6)) : "" } })
        </div>
    </div>
</div>
<div class="row">
    <div class="col-xs-8">
        <div class="form-group">
            @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
        </div>
    </div>
    <div class="col-xs-4">
        <div class="form-group">
            @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
        </div>
    </div>
</div>
<div class="row">
    <div class="col-xs-4">
        <div class="form-group">
            @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
        </div>
    </div>

    <div class="col-xs-4">
        <div class="form-group">
            @Html.LabelFor(model => model.State, htmlAttributes: new { @class = "control-label" })
            @Html.DropDownListFor(x => x.State, CampManagement.Web.Models.States.GetStatesList(), new { @class = "form-control", @readonly = "", style="width:100%" })
        </div>
    </div>
    <div class="col-xs-4">
        <div class="form-group">
            @Html.LabelFor(model => model.Zip, htmlAttributes: new { @class = "control-label" })
            @Html.EditorFor(model => model.Zip, new { htmlAttributes = new { @class = "form-control", @readonly = "" } })
        </div>
    </div>
</div>